buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1"
	}
}

import java.text.SimpleDateFormat

def globalVersion = new Version(currentVersion)

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// This is the library version used when deploying the artifact
version = "1.0.0"

android {
	compileSdkVersion 21
	buildToolsVersion "21.1.2"

	resourcePrefix "appstorelibrary__"

	defaultConfig {
		minSdkVersion 8
		targetSdkVersion 21
		versionCode 1
		versionName "1.0"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile 'com.android.support:appcompat-v7:21.0.3'

}

def siteUrl = 'https://github.com/mcsong/AppStoreLibrary'      // Homepage URL of the library
def gitUrl = 'https://github.com/mcsong/AppStoreLibrary.git'   // Git repository URL

group = "<maven group id>"                                        // Maven Group ID for the artifact


install {
	repositories.mavenInstaller {
		// This generates POM.xml with proper parameters
		pom {
			project {
				packaging 'aar'

				// Add your description here
				name '<Your library description>'
				url siteUrl

				// Set your license
				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id '<your user ID>'
						name '<your name>'
						email '<your email>'
					}
				}
				scm {
					connection gitUrl
					developerConnection gitUrl
					url siteUrl

				}
			}
		}
	}
}

dependencies {
}

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task javadoc(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives javadocJar
	archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
	user = properties.getProperty("bintray.user")
	key = properties.getProperty("bintray.apikey")

	configurations = ['archives']
	pkg {
		repo = "maven"
		name = "net.sjava.appstore"
		websiteUrl = siteUrl
		vcsUrl = gitUrl
		licenses = ["Apache-2.0"]
		publish = true
	}
}

class Version {
	String originalVersion
	String thisVersion
	String status
	Date buildTime

	Version(String versionValue) {
		buildTime = new Date()
		originalVersion = versionValue
		if (originalVersion.endsWith('-SNAPSHOT')) {
			status = 'integration'
			thisVersion = originalVersion.substring(0, originalVersion.length() - 'SNAPSHOT'.length()) + getTimestamp()
		} else {
			status = 'release'
			thisVersion = versionValue
		}
	}

	String getTimestamp() {
		// Convert local file timestamp to UTC
		def format = new SimpleDateFormat('yyyyMMddHHmmss')
		format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')));
		return format.format(buildTime)
	}

	String toString() {
		thisVersion
	}
}

